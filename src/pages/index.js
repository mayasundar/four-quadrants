import Head from "next/head";
import styles from "@/styles/Home.module.css";
import {useState, useCallback } from "react";
import Label from '../components/Label.js';
import Canvas from '../components/Canvas.js';
import ImageUpload from "../components/ImageUpload.js";

export default function Home() {
    const [imagePosition, setImagePosition] = useState({ x: 0, y: 0 });
    const [uploadedImage, setUploadedImage] = useState(null);
    const [circles, setCircles] = useState([]);

    const handleImageUpload = (file) => {
        setUploadedImage(URL.createObjectURL(file));
    };

    const handleImagePositionUpdate = (position) => {
        setImagePosition(position);
    };

  const addCircle = useCallback((newCircle) => {
    setCircles((prevCircles) => [...prevCircles, { ...newCircle, text: "" }]);
  }, []);

  const deleteCircle = useCallback((id) => {
    setCircles((prevCircles) => prevCircles.filter((circle) => circle.id !== id));
  }, []);

  const updateCircle = useCallback((id, newX, newY) => {
    setCircles((prevCircles) =>
        prevCircles.map((circle) =>
            circle.id === id ? { ...circle, labelX: newX, labelY: newY } : circle
        )
    );
  }, []);

  const updateCircleText = useCallback((id, newText) => {
    setCircles((prevCircles) =>
        prevCircles.map((circle) =>
            circle.id === id ? { ...circle, text: newText } : circle
        )
    );
  }, []);

    return (
        <>
            <Head>
                <title>Four Quadrants</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main className={styles.main}>
                <div className={styles.toolbar}>
                    <ImageUpload
                        onImageUpload={handleImageUpload}
                        onImagePositionUpdate={handleImagePositionUpdate}
                    />
                </div>
                <div className={styles.canvasWrapper}>
                    <div className={styles.axesContainer}>

                        <input
                            type="text"
                            className={styles.axisLabel}
                            style={{
                                position: "absolute",
                                left: "50%",
                                top: "-60px",
                                transform: "translateX(-50%)",
                            }}
                            placeholder="Top Axis"
                        />
                        <input
                            type="text"
                            className={styles.axisLabel}
                            style={{
                                position: "absolute",
                                left: "-50px",
                                top: "50%",
                                transform: "rotate(-90deg) translateY(-50%)",
                            }}
                            placeholder="Left Axis"
                        />
                        <input
                            type="text"
                            className={styles.axisLabel}
                            style={{
                                position: "absolute",
                                right: "-50px",
                                top: "50%",
                                transform: "rotate(90deg) translateY(-50%)",
                            }}
                            placeholder="Right Axis"
                        />
                        <input
                            type="text"
                            className={styles.axisLabel}
                            style={{
                                position: "absolute",
                                left: "50%",
                                bottom: "0px",
                                transform: "translateX(-50%)",
                            }}
                            placeholder="Bottom Axis"
                        />
                    </div>

                    <Canvas
                        circles={circles}
                        onAddCircle={addCircle}
                        onDeleteCircle={deleteCircle}
                        onUpdateCircle={updateCircle}
                    />

                    <div style={{ position: "absolute", top: 0, left: 0 }}>
                        {circles.map((circle) => (
                            <Label
                                key={circle.id}
                                id={circle.id}
                                x={circle.labelX}
                                y={circle.labelY}
                                value={circle.text}
                                onUpdateText={updateCircleText}
                                onDelete={() => deleteCircle(circle.id)}
                                onDragStop={updateCircle}
                            />
                        ))}
                    </div>
                </div>
            </main>
        </>
    );
}